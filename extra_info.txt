4Tuple_columns = ['srcIP', 'dstIP', 'port', 'portName', 'protocol', 'trafficType', 'networkLayer', 'shared']t
metadata_columns = ['ipAddress', 'vm_name', 'vm_otype', 'vm_oid', 'subnet_ip', 'subnet_netmask', 'subnet_prefixLength', 'subnet_networkAddress', 'subnet_cidr', 'subnet_start', 'subnet_end', 'ipAddressType', 'privateAddress', 'source', 'Ipmetadata_domain', 'ipmetadata_isp', 'host_name', 'host_otype', 'host_oid', 'dnsinfo_ipdomain', 'dnsinfo_ip', 'dnsinfo_domainname', 'dnsinfo_hostname', 'dnsinfo_source', 'k8s_service_name', 'k8s_service_otype', 'k8s_service_oid', 'k8s_cluster_name', 'k8s_cluster_otype', 'k8s_cluster_oid', 'k8s_namespace_name', 'k8s_namespace_otype', 'k8s_namespace_oid', 'k8s_node_name', 'k8s_node_otype', 'k8s_node_oid', 'IP_entity_name', 'IP_entity_otype', 'IP_entity_oid', 'Nic_name', 'Nic_otype', 'Nic_oid', 'sg_name', 'sg_otype', 'sg_oid', 'IP_set_name', 'IP_set_otype', 'IP_set_oid', 'STag_name', 'STag_otype', 'STag_oid', 'L2net_name', 'L2net_otype', 'L2net_oid', 'Grp_name', 'Grp_otype', 'Grp_oid', 'cluster_name', 'cluster_otype', 'cluster_oid', 'RP_name', 'RP_otype', 'RP_oid', 'DC_name', 'DC_otype', 'DC_oid', 'managerNSX_name', 'managerNSX_otype', 'managerNSX_oid', 'lookupDomain_name', 'lookupDomain_otype', 'lookupDomain_oid', 'vpc_name', 'vpc_otype', 'vpc_oid', 'transportNode_name', 'transportNode_otype', 'transportNode_oid', 'Dvpg_name', 'Dvpg_otype', 'Dvpg_oid', 'Dvs_name', 'Dvs_otype', 'Dvs_oid']

regex to grab string between double quotes "(.*?)"

if we open a file using 'with' (context manager) exiting will close the file automatically no need to speicify explicitly

meta data indexing = [(0, 'ipAddress'), (1, 'vm_name'), (2, 'vm_otype'), (3, 'vm_oid'), (4, 'subnet_ip'), (5, 'subnet_netmask'), (6, 'subnet_prefixLength'), (7, 'subnet_networkAddress'), (8, 'subnet_cidr'), (9, 'subnet_start'), (10, 'subnet_end'), (11, 'ipAddressType'), (12, 'privateAddress'), (13, 'source'), (14, 'Ipmetadata_domain'), (15, 'ipmetadata_isp'), (16, 'host_name'), (17, 'host_otype'), (18, 'host_oid'), (19, 'dnsinfo_ipdomain'), (20, 'dnsinfo_ip'), (21, 'dnsinfo_domainname'), (22, 'dnsinfo_hostname'), (23, 'dnsinfo_source'), (24, 'k8s_service_name'), (25, 'k8s_service_otype'), (26, 'k8s_service_oid'), (27, 'k8s_cluster_name'), (28, 'k8s_cluster_otype'), (29, 'k8s_cluster_oid'), (30, 'k8s_namespace_name'), (31, 'k8s_namespace_otype'), (32, 'k8s_namespace_oid'), (33, 'k8s_node_name'), (34, 'k8s_node_otype'), (35, 'k8s_node_oid'), (36, 'IP_entity_name'), (37, 'IP_entity_otype'), (38, 'IP_entity_oid'), (39, 'Nic_name'), (40, 'Nic_otype'), (41, 'Nic_oid'), (42, 'sg_name'), (43, 'sg_otype'), (44, 'sg_oid'), (45, 'IP_set_name'), (46, 'IP_set_otype'), (47, 'IP_set_oid'), (48, 'STag_name'), (49, 'STag_otype'), (50, 'STag_oid'), (51, 'L2net_name'), (52, 'L2net_otype'), (53, 'L2net_oid'), (54, 'Grp_name'), (55, 'Grp_otype'), (56, 'Grp_oid'), (57, 'cluster_name'), (58, 'cluster_otype'), (59, 'cluster_oid'), (60, 'RP_name'), (61, 'RP_otype'), (62, 'RP_oid'), (63, 'DC_name'), (64, 'DC_otype'), (65, 'DC_oid'), (66, 'managerNSX_name'), (67, 'managerNSX_otype'), (68, 'managerNSX_oid'), (69, 'lookupDomain_name'), (70, 'lookupDomain_otype'), (71, 'lookupDomain_oid'), (72, 'vpc_name'), (73, 'vpc_otype'), (74, 'vpc_oid'), (75, 'transportNode_name'), (76, 'transportNode_otype'), (77, 'transportNode_oid'), (78, 'Dvpg_name'), (79, 'Dvpg_otype'), (80, 'Dvpg_oid'), (81, 'Dvs_name'), (82, 'Dvs_otype'), (83, 'Dvs_oid')]
main flow info columns = [(0, 'name'), (1, 'time'), (2, 'modelkey_cid'), (3, 'modelkey_otype'), (4, 'modelkey_oid'), (5, 'port.start'), (6, 'port.end'), (7, 'port.display'), (8, 'port.ianaName'), (9, 'port.ianaPortDisplay'), (10, 'Protocol'), (11, 'srcIP.prefixLength'), (12, 'srcIP.ipAddress'), (13, 'srcIP.netMask'), (14, 'srcIP.networkAddress'), (15, 'srcIP.cidr'), (16, 'srcIP.start'), (17, 'srcIP.end'), (18, 'srcIP.ipaddresstype'), (19, 'srcIP.privateaddress'), (20, 'srcIP.Source'), (21, 'srcIP.Ipmetadata_domain'), (22, 'srcIP.Ipmetadata_isp'), (23, 'dstIP.prefixLength'), (24, 'dstIP.ipAddress'), (25, 'dstIP.netMask'), (26, 'dstIP.networkAddress'), (27, 'dstIP.cidr'), (28, 'dstIP.start'), (29, 'dstIP.end'), (30, 'dstIP.ipaddresstype'), (31, 'dstIP.privateaddress'), (32, 'dstIP.Source'), (33, 'dstIP.Ipmetadata_domain'), (34, 'dstIP.Ipmetadata_isp'), (35, 'trafficType'), (36, 'shared'), (37, 'networkLayer'), (38, 'srcsubnet.prefixLength'), (39, 'srcsubnet.ipAddress'), (40, 'srcsubnet.netMask'), (41, 'srcsubnet.networkAddress'), (42, 'srcsubnet.cidr'), (43, 'srcsubnet.start'), (44, 'srcsubnet.end'), (45, 'srcsubnet.ipaddresstype'), (46, 'srcsubnet.privateaddress'), (47, 'srcsubnet.Source'), (48, 'srcsubnet.Ipmetadata_domain'), (49, 'srcsubnet.Ipmetadata_isp'), (50, 'dstsubnet.prefixLength'), (51, 'dstsubnet.ipAddress'), (52, 'dstsubnet.netMask'), (53, 'dstsubnet.networkAddress'), (54, 'dstsubnet.cidr'), (55, 'dstsubnet.start'), (56, 'dstsubnet.end'), (57, 'dstsubnet.ipaddresstype'), (58, 'dstsubnet.privateaddress'), (59, 'dstsubnet.Source'), (60, 'dstsubnet.Ipmetadata_domain'), (61, 'dstsubnet.Ipmetadata_isp'), (62, 'withinhost'), (63, 'typetag'), (64, '__searchTags'), (65, '__related_entities'), (66, 'srcVmTags'), (67, 'dstVmTags'), (68, 'attribute.reportedaction'), (69, 'attribute.reportedRuleId'), (70, 'attribute.collectorId'), (71, 'attribute_rule.name'), (72, 'attribute_rule.modelkey_otype'), (73, 'attribute_rule.modelkey_oid'), (74, 'attribute_firewallmanager.name'), (75, 'attribute_firewallmanager.modelkey_otype'), (76, 'attribute_firewallmanager.modelkey_oid'), (77, 'activedpIds'), (78, 'typeTagsPacked'), (79, 'protectionStatus'), (80, 'flowAction'), (81, 'srcDnsInfo.ipDomain'), (82, 'srcDnsInfo.ip'), (83, 'srcDnsInfo.domainName'), (84, 'srcDnsInfo.hostName'), (85, 'srcDnsInfo.source'), (86, 'dstDnsInfo.ipDomain'), (87, 'dstDnsInfo.ip'), (88, 'dstDnsInfo.domainName'), (89, 'dstDnsInfo.hostName'), (90, 'dstDnsInfo.source'), (91, 'reporterEntity.collectorId'), (92, 'reporterEntity_reporter.name'), (93, 'reporterEntity_reporter.modelkey_otype'), (94, 'reporterEntity_reporter.modelkey_oid'), (95, 'SchemaVersion'), (96, 'lastActivity'), (97, 'activity'), (98, 'srck8Info.k8scollectorId'), (99, 'srck8Info_k8sservice.name'), (100, 'srck8Info_k8sservice.modelkey_otype'), (101, 'srck8Info_k8sservice.modelkey_oid'), (102, 'srck8Info_k8scluster.name'), (103, 'srck8Info_k8scluster.modelkey_otype'), (104, 'srck8Info_k8scluster.modelkey_oid'), (105, 'srck8Info_k8snamespace.name'), (106, 'srck8Info_k8snamespace.modelkey_otype'), (107, 'srck8Info_k8snamespace.modelkey_oid'), (108, 'srck8Info_k8snode.name'), (109, 'srck8Info_k8snode.modelkey_otype'), (110, 'srck8Info_k8snode.modelkey_oid'), (111, 'dstk8Info.k8scollectorId'), (112, 'dstk8Info_k8sservice.name'), (113, 'dstk8Info_k8sservice.modelkey_otype'), (114, 'dstk8Info_k8sservice.modelkey_oid'), (115, 'dstk8Info_k8scluster.name'), (116, 'dstk8Info_k8scluster.modelkey_otype'), (117, 'dstk8Info_k8scluster.modelkey_oid'), (118, 'dstk8Info_k8snamespace.name'), (119, 'dstk8Info_k8snamespace.modelkey_otype'), (120, 'dstk8Info_k8snamespace.modelkey_oid'), (121, 'dstk8Info_k8snode.name'), (122, 'dstk8Info_k8snode.modelkey_otype'), (123, 'dstk8Info_k8snode.modelkey_oid'), (124, 'srcIpEntity.name'), (125, 'srcIpEntity.modelkey_otype'), (126, 'srcIpEntity.modelkey_oid'), (127, 'dstIpEntity.name'), (128, 'dstIpEntity.modelkey_otype'), (129, 'dstIpEntity.modelkey_oid'), (130, 'srcNic.name'), (131, 'srcNic.modelkey_otype'), (132, 'srcNic.modelkey_oid'), (133, 'dstNic.name'), (134, 'dstNic.modelkey_otype'), (135, 'dstNic.modelkey_oid'), (136, 'srcVm.name'), (137, 'srcVm.modelkey_otype'), (138, 'srcVm.modelkey_oid'), (139, 'dstVm.name'), (140, 'dstVm.modelkey_otype'), (141, 'dstVm.modelkey_oid'), (142, 'srcSg.name'), (143, 'srcSg.modelkey_otype'), (144, 'srcSg.modelkey_oid'), (145, 'dstSg.name'), (146, 'dstSg.modelkey_otype'), (147, 'dstSg.modelkey_oid'), (148, 'srcIpSet.name'), (149, 'srcIpSet.modelkey_otype'), (150, 'srcIpSet.modelkey_oid'), (151, 'dstIpSet.name'), (152, 'dstIpSet.modelkey_otype'), (153, 'dstIpSet.modelkey_oid'), (154, 'srcSt.name'), (155, 'srcSt.modelkey_otype'), (156, 'srcSt.modelkey_oid'), (157, 'dstSt.name'), (158, 'dstSt.modelkey_otype'), (159, 'dstSt.modelkey_oid'), (160, 'srcL2Net.name'), (161, 'srcL2Net.modelkey_otype'), (162, 'srcL2Net.modelkey_oid'), (163, 'dstL2Net.name'), (164, 'dstL2Net.modelkey_otype'), (165, 'dstL2Net.modelkey_oid'), (166, 'srcGroup.name'), (167, 'srcGroup.modelkey_otype'), (168, 'srcGroup.modelkey_oid'), (169, 'dstGroup.name'), (170, 'dstGroup.modelkey_otype'), (171, 'dstGroup.modelkey_oid'), (172, 'srcCluster.name'), (173, 'srcCluster.modelkey_otype'), (174, 'srcCluster.modelkey_oid'), (175, 'dstCluster.name'), (176, 'dstCluster.modelkey_otype'), (177, 'dstCluster.modelkey_oid'), (178, 'srcRp.name'), (179, 'srcRp.modelkey_otype'), (180, 'srcRp.modelkey_oid'), (181, 'dstRp.name'), (182, 'dstRp.modelkey_otype'), (183, 'dstRp.modelkey_oid'), (184, 'srcDc.name'), (185, 'srcDc.modelkey_otype'), (186, 'srcDc.modelkey_oid'), (187, 'dstDc.name'), (188, 'dstDc.modelkey_otype'), (189, 'dstDc.modelkey_oid'), (190, 'srcHost.name'), (191, 'srcHost.modelkey_otype'), (192, 'srcHost.modelkey_oid'), (193, 'dstHost.name'), (194, 'dstHost.modelkey_otype'), (195, 'dstHost.modelkey_oid'), (196, 'svcEP.name'), (197, 'svcEP.modelkey_otype'), (198, 'svcEP.modelkey_oid'), (199, 'srcManagers.name'), (200, 'srcManagers.modelkey_otype'), (201, 'srcManagers.modelkey_oid'), (202, 'dstManagers.name'), (203, 'dstManagers.modelkey_otype'), (204, 'dstManagers.modelkey_oid'), (205, 'flowDomain.name'), (206, 'flowDomain.modelkey_otype'), (207, 'flowDomain.modelkey_oid'), (208, 'srcLookupDomain.name'), (209, 'srcLookupDomain.modelkey_otype'), (210, 'srcLookupDomain.modelkey_oid'), (211, 'dstLookupDomain.name'), (212, 'dstLookupDomain.modelkey_otype'), (213, 'dstLookupDomain.modelkey_oid'), (214, 'srcVpc.name'), (215, 'srcVpc.modelkey_otype'), (216, 'srcVpc.modelkey_oid'), (217, 'dstVpc.name'), (218, 'dstVpc.modelkey_otype'), (219, 'dstVpc.modelkey_oid'), (220, 'srcTransportNode.name'), (221, 'srcTransportNode.modelkey_otype'), (222, 'srcTransportNode.modelkey_oid'), (223, 'dstTransportNode.name'), (224, 'dstTransportNode.modelkey_otype'), (225, 'dstTransportNode.modelkey_oid'), (226, 'srcDvpg.name'), (227, 'srcDvpg.modelkey_otype'), (228, 'srcDvpg.modelkey_oid'), (229, 'dstDvpg.name'), (230, 'dstDvpg.modelkey_otype'), (231, 'dstDvpg.modelkey_oid'), (232, 'srcDvs.name'), (233, 'srcDvs.modelkey_otype'), (234, 'srcDvs.modelkey_oid'), (235, 'dstDvs.name'), (236, 'dstDvs.modelkey_otype'), (237, 'dstDvs.modelkey_oid'), (238, 'metricData.totalBytes'), (239, 'metricData.srcBytes'), (240, 'metricData.dstBytes'), (241, 'metricData.totalPackets'), (242, 'metricData.allowedSessionCount'), (243, 'metricData.nsxTcpRtt_abs_max_ms'), (244, 'metricData.nsxTcpRtt_abs_avg_ms')]


pgrep python3 to get pid of all background running process and sudo kill id to kill

chmod +x file : to grant permission

ls -v to get lexographically sorted file names
ls -lrth/ltrh for date modified order

./insertIntoClickhouse.sh 4 & ./insertIntoClickhouse.sh 5 & ./insertIntoClickhouse.sh 6 & ./insertIntoClickhouse.sh 7 & ./insertIntoClickhouse.sh 8 & ./insertIntoClickhouse.sh 9 & ./insertIntoClickhouse.sh 10 & ./insertIntoClickhouse.sh 12 & ./insertIntoClickhouse.sh 1 & ./insertIntoClickhouse.sh 2 & ./insertIntoClickhouse.sh 3 & ./insertIntoClickhouse.sh 16 & ./insertIntoClickhouse.sh 17

https://www.rapidtables.com/code/linux/mv.html moving files:

python3 givemehouroriginal.py 1 & python3 givemehouroriginal.py 2 & python3 givemehouroriginal.py 3 & python3 givemehouroriginal.py 4 &

sudo find /etc/ -type f -print | wc -l count of files in specific dir

sudo chown ubuntu:ubuntu -R clickhousePOC/ :change permission 

sed 's/,/\t/g' to convert CSV  to TSV format;

time (gunzip/zcat hour_${i}/*.csv.gz | sed 's/,/\t/g' | clickhouse-client --password ubuntu --query="INSERT INTO trips FORMAT TSV")  may help ??

python3 givemehouroriginal.py 0 & python3 givemehouroriginal.py 23 & python3 givemehouroriginal.py 22 & python3 givemehouroriginal.py 21 & python3 givemehouroriginal.py 20 & python3 givemehouroriginal.py 19 & python3 givemehouroriginal.py 18 & python3 givemehouroriginal.py 17 & python3 givemehouroriginal.py 16


sudo chown ubuntu:ubuntu -R clickhousePOC/
./insertIntoClickhouse.sh 1 & ./insertIntoClickhouse.sh 2 & ./insertIntoClickhouse.sh 3 & ./insertIntoClickhouse.sh 4 & ./insertIntoClickhouse.sh 5 & ./insertIntoClickhouse.sh 6 & ./insertIntoClickhouse.sh 7 & ./insertIntoClickhouse.sh 8
./insertIntoClickhouse.sh 9 & ./insertIntoClickhouse.sh 10 & ./insertIntoClickhouse.sh 11 & ./insertIntoClickhouse.sh 12 & ./insertIntoClickhouse.sh 13 & ./insertIntoClickhouse.sh 14 & ./insertIntoClickhouse.sh 15 & ./insertIntoClickhouse.sh 16
./insertIntoClickhouse.sh 17 & ./insertIntoClickhouse.sh 18 & ./insertIntoClickhouse.sh 19 & ./insertIntoClickhouse.sh 20 & ./insertIntoClickhouse.sh 21 & ./insertIntoClickhouse.sh 22 & ./insertIntoClickhouse.sh 23 & ./insertIntoClickhouse.sh 24


DATA COMPRESSION : https://www.altinity.com/blog/2017/11/21/compression-in-clickhouse
 “cold” run (no data is cached), and following “hot” run when some data is already cached in OS memory after the first run.

python3 DataGen_FinalKingGiveHourFile.py 0 0 & python3 DataGen_FinalKingGiveHourFile.py 0 100 & python3 DataGen_FinalKingGiveHourFile.py 0 200 & python3 DataGen_FinalKingGiveHourFile.py 0 300 & python3 DataGen_FinalKingGiveHourFile.py 0 400 & python3 DataGen_FinalKingGiveHourFile.py 0 500 & python3 DataGen_FinalKingGiveHourFile.py 0 600 & python3 DataGen_FinalKingGiveHourFile.py 0 700 & python3 DataGen_FinalKingGiveHourFile.py 0 800 & python3 DataGen_FinalKingGiveHourFile.py 0 900

python3 allmetrics.py 8 0 & python3 allmetrics.py 8 500 & python3 allmetrics.py 9 0 & python3 allmetrics.py 9 500 & python3 allmetrics.py 10 0 & python3 allmetrics.py 10 500 & python3 allmetrics.py 11 0 & python3 allmetrics.py 11 500 & python3 allmetrics.py 12 0 & python3 allmetrics.py 12 500 & python3 allmetrics.py 13 0 & python3 allmetrics.py 13 500 & python3 allmetrics.py 14 0 & python3 allmetrics.py 14 500 & python3 allmetrics.py 15 0 & python3 allmetrics.py 15 500

python3 allmetrics.py 16 0 & python3 allmetrics.py 16 500 & python3 allmetrics.py 17 0 & python3 allmetrics.py 17 500 & python3 allmetrics.py 18 0 & python3 allmetrics.py 18 500 & python3 allmetrics.py 19 0 & python3 allmetrics.py 19 500 & python3 allmetrics.py 20 0 & python3 allmetrics.py 20 500 & python3 allmetrics.py 21 0 & python3 allmetrics.py 21 500 & python3 allmetrics.py 22 0 & python3 allmetrics.py 22 500 & python3 allmetrics.py 23 0 & python3 allmetrics.py 23 500


max_memory_usage   │ 10000000000 (9.3GiB)  │ "Maximum memory usage for processing of single query. Zero means unlimited."
max_bytes_before_remerge_sort  │ 1000000000 (0.93 GiB)  │ "In case of ORDER BY with LIMIT, when memory usage is higher than specified threshold, perform additional steps of merging blocks before final merge to keep just top LIMIT rows


import random
random.sample(range(100), 10) //always select non repeating values


sudo lsof -p $(pgrep clickhouse) -i -Pan

open port:

sudo iptables -I INPUT -p tcp --dport 9000 --syn -j ACCEPT

python3 4TupleGen.py 4000 5000 & python3 4TupleGen.py 5000 6000 & python3 4TupleGen.py 6000 7000 & python3 4TupleGen.py 8000 9000 & python3 4TupleGen.py 9000 10000 & python3 4TupleGen.py 10000 11000 & python3 4TupleGen.py 11000 12000 python3 4TupleGen.py 12000 12500

python3 flowGenPerHour.py 0 0 & python3 flowGenPerHour.py 0 500 & python3 flowGenPerHour.py 1 0 & python3 flowGenPerHour.py 1 500 & python3 flowGenPerHour.py 2 0 & python3 flowGenPerHour.py 2 500 & python3 flowGenPerHour.py 3 0 & python3 flowGenPerHour.py 3 500 & python3 flowGenPerHour.py 4 0 & python3 flowGenPerHour.py 4 500 &  python3 flowGenPerHour.py 5 0 & python3 flowGenPerHour.py 5 500 & python3 flowGenPerHour.py 6 0 & python3 flowGenPerHour.py 6 500 & python3 flowGenPerHour.py 7 0 & python3 flowGenPerHour.py 7 500

python3 flowGenPerHour.py 8 0 & python3 flowGenPerHour.py 8 500 & python3 flowGenPerHour.py 9 0 & python3 flowGenPerHour.py 9 500 & python3 flowGenPerHour.py 10 0 & python3 flowGenPerHour.py 10 500 & python3 flowGenPerHour.py 11 0 & python3 flowGenPerHour.py 11 500 & python3 flowGenPerHour.py 12 0 & python3 flowGenPerHour.py 12 500 &  python3 flowGenPerHour.py 13 0 & python3 flowGenPerHour.py 13 500 & python3 flowGenPerHour.py 14 0 & python3 flowGenPerHour.py 14 500 & python3 flowGenPerHour.py 15 0 & python3 flowGenPerHour.py 15 500

python3 flowGenPerHour.py 16 0 & python3 flowGenPerHour.py 16 500 & python3 flowGenPerHour.py 17 0 & python3 flowGenPerHour.py 17 500 & python3 flowGenPerHour.py 18 0 & python3 flowGenPerHour.py 18 500 & python3 flowGenPerHour.py 19 0 & python3 flowGenPerHour.py 19 500 & python3 flowGenPerHour.py 20 0 & python3 flowGenPerHour.py 20 500 & python3 flowGenPerHour.py 21 0 & python3 flowGenPerHour.py 21 500 &  python3 flowGenPerHour.py 22 0 & python3 flowGenPerHour.py 22 500 & python3 flowGenPerHour.py 23 0 & python3 flowGenPerHour.py 23 500


--using symlinks for extra disks
create a db and find its data storage path , for example /opt/clickhouse/data/fastdb
create a path in another ssd ,for example /mnt/ssd/fastdb
delete file fastdb that under /opt/clickhouse/data/fastdb ---- /opt/clickhouse/data/fastdb must be blank and no file exists
run ln -s /mnt/ssd/fastdb /opt/clickhouse/data/ in terminal

systemctl | grep running
--to clear cache
sync; echo 1 > /proc/sys/vm/drop_caches
sync; echo 2 > /proc/sys/vm/drop_caches
sync; echo 3 > /proc/sys/vm/drop_caches
--to clear swp
swapoff -a && swapon -a

python3 flowsforplanning.py 0 & python3 flowsforplanning.py 10 & python3 flowsforplanning.py 20 & python3 flowsforplanning.py 30 & python3 flowsforplanning.py 40 & python3 flowsforplanning.py 50 & python3 flowsforplanning.py 60 & python3 flowsforplanning.py 70 & python3 flowsforplanning.py 80 & python3 flowsforplanning.py 90
python3 flowsforplanning.py 50 & python3 flowsforplanning.py 70 & python3 flowsforplanning.py 100 & python3 flowsforplanning.py 110 & python3 flowsforplanning.py 120 & python3 flowsforplanning.py 130 & python3 flowsforplanning.py 140 & python3 flowsforplanning.py 150 & python3 flowsforplanning.py 160 & python3 flowsforplanning.py 170 & python3 flowsforplanning.py 180 & python3 flowsforplanning.py 190
python3 flowsforplanning.py 120 & python3 flowsforplanning.py 130 & python3 flowsforplanning.py 140 & python3 flowsforplanning.py 170 & python3 flowsforplanning.py 190
